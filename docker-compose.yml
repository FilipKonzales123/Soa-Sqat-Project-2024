services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: web66
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - kong-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    image: kong:latest
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001,0.0.0.0:8444 ssl
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    networks:
      - kong-net

  inventory-service:
    build:
      context: inventory-service
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://postgres:web66@postgres/postgres"
    depends_on:
       postgres:
         condition: service_healthy
    ports:
      - "8081:80"
    networks:
      - kong-net
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:80/ || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 10

  booking-service:
    build:
      context: booking-service
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    networks:
      - kong-net
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:80/ || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 10

  testing-service:
    build:
      context: testing-service
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      inventory-service:
        condition: service_healthy
      booking-service:
        condition: service_healthy
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge